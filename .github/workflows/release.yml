name: Release

on:
  push:
    tags:
      - 'v*.*' # Push events to matching v*, i.e., v1.0, v20.15.10
      - '*.*' # Push events to matching v*, i.e. 1.0, 20.15.10

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      RELEASE_TYPE: false  # Default to false
      PRE_RELEASE: false    # Default to false

    steps:
      - name: Determine if Release
        id: set_release_type
        run: |
          if [[ "${GITHUB_REF#refs/tags/}" != v* ]]; then
            echo "RELEASE_TYPE=true" >> $GITHUB_ENV
            echo "PRE_RELEASE=true" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Build project
        run: |
          npm install
          npm run build

      - name: Install PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: "8.1"

      - name: Add Composer Global to PATH
        run: echo "$(composer global config bin-dir --absolute --quiet)" >> $GITHUB_PATH

      - name: Install Scoper
        run: |
          ./bin/setup-scoper.sh

      - name: Install dependencies
        run: |
          composer update
          composer install --no-dev --no-interaction --ignore-platform-reqs

      - name: Package release
        run: |
          mkdir disciple-tools-autolink
          cp -r disciple-tools-autolink.php config dist languages resources routes src vendor vendor-scoped composer.json composer.lock composer.scoped.json composer.scoped.lock LICENSE package.json package-lock.json disciple-tools-autolink/
          zip -r disciple-tools-autolink.zip disciple-tools-autolink

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: ${{ env.RELEASE_TYPE }}
          prerelease: ${{ env.PRE_RELEASE }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./disciple-tools-autolink.zip
          asset_name: disciple-tools-autolink.zip
          asset_content_type: application/zip
